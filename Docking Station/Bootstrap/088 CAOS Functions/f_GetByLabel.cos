*CAOS FUNCTION*
sets game "f_GetByLabel" sorc 1 202 2 1000
setv game "f_GetByLabel:v" 1

**TARG-dependent example, uncomment to test
*rtar 1 2 14
*sets name "pets:name" "stella"
*outs caos 1 1 "pets" "name" game "f_GetByLabel" 0 0 va99

**Independent Example, uncomment to test:
*outs caos 0 0 "f_GetByLabel" "v" game "f_GetByLabel" 0 0 va99


*remove the script
scrx 1 202 2 1000


* f_GetByLabel
*This function REQUIRES the CAOS line to run with INLINE enabled because it stores
*and retrives variables stored in the OWNR agent!
*This will basically just return the result of NAME/GAME "_p1_:_p2_"
*so if _p1_ is "body_part" and _p2_ is "brain" it will return the result of 
*NAME/GAME "body_part:brain"
*LABELS ARE CASE SENSITIVE
*If there is nothing by that label it will return "0"
*If the namevar contains an agent it will just return the namevar name.
*Otherwise it will return a string containing the thing.
*It will return "null" if there is no targ agent
scrp 1 202 2 1000
*va99 is the 'is the targ/ownr missing' flag
	setv va99 0
	doif targ eq null
		targ ownr
		doif targ eq null
			setv va99 1
		endi
	endi
*account for if each parameter is a string or not	
	doif type _p1_ eq 2
		sets va00 _p1_
	elif type _p1_ eq 0
		sets va00 vtos _p1_
	endi

	adds va00 ":"

	doif type _p2_ eq 2
		adds va00 _p2_
	elif type _p2_ eq 0
		adds va00 vtos _p2_
	endi

*if you have a targ/ownr, search name variables.
	doif va99 eq 0

		doif type name va00 eq 0
			outs vtos name va00
		elif type name va00 eq 1
			outs vtos ftoi name va00
		elif type name va00 eq 2
			outs name va00
		elif type name va00 gt 2
			outs va00
		else
			outs "null"
		endi

	elif va99 eq 1
*if you don't have a targ/ownr, search for game variables.
		doif type game va00 eq 0
			outs vtos game va00
		elif type game va00 eq 1
			outs vtos ftoi game va00
		elif type game va00 eq 2
			outs game va00
		elif type game va00 gt 2
			outs va00
		else
			outs "null"
		endi

	endi
endm

rscr
delg "f_GetByLabel"
delg "f_GetByLabel:v"